<?php

/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.12
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

// Try to load our extension if it's not already loaded.
if (!extension_loaded('neoradio2')) {
  if (strtolower(substr(PHP_OS, 0, 3)) === 'win') {
    if (!dl('php_neoradio2.dll')) return;
  } else {
    // PHP_SHLIB_SUFFIX gives 'dylib' on MacOS X but modules are 'so'.
    if (PHP_SHLIB_SUFFIX === 'dylib') {
      if (!dl('neoradio2.so')) return;
    } else {
      if (!dl('neoradio2.'.PHP_SHLIB_SUFFIX)) return;
    }
  }
}



abstract class neoradio2 {
	const StatusInProgress = 0;

	const StatusFinished = StatusFinished;

	const StatusError = StatusError;

	const CommandStateHost = 0;

	const CommandStateDevice = CommandStateDevice;

	const CommandStateUnknown = -1;

	const NEORADIO2_SUCCESS = NEORADIO2_SUCCESS;

	const NEORADIO2_FAILURE = NEORADIO2_FAILURE;

	const NEORADIO2_ERR_WBLOCK = NEORADIO2_ERR_WBLOCK;

	const NEORADIO2_ERR_INPROGRESS = NEORADIO2_ERR_INPROGRESS;

	const NEORADIO2_ERR_FAILURE = NEORADIO2_ERR_FAILURE;

	const NEORADIO2_MAX_DEVS = NEORADIO2_MAX_DEVS;

	const StatusChain = 0;

	const StatusAppStart = StatusAppStart;

	const StatusPCBSN = StatusPCBSN;

	const StatusSensorRead = StatusSensorRead;

	const StatusSensorWrite = StatusSensorWrite;

	const StatusSettingsRead = StatusSettingsRead;

	const StatusSettingsWrite = StatusSettingsWrite;

	const StatusCalibration = StatusCalibration;

	const StatusCalibrationPoints = StatusCalibrationPoints;

	const StatusCalibrationStored = StatusCalibrationStored;

	const StatusCalibrationInfo = StatusCalibrationInfo;

	const StatusLedToggle = StatusLedToggle;

	const StatusMax = StatusMax;
}

/* PHP Proxy Classes */
class Neoradio2DeviceInfo {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		$func = 'Neoradio2DeviceInfo_'.$var.'_set';
		if (function_exists($func)) return call_user_func($func,$this->_cPtr,$value);
		if ($var === 'thisown') return swig_neoradio2_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __get($var) {
		$func = 'Neoradio2DeviceInfo_'.$var.'_get';
		if (function_exists($func)) return call_user_func($func,$this->_cPtr);
		if ($var === 'thisown') return swig_neoradio2_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __isset($var) {
		if (function_exists('Neoradio2DeviceInfo_'.$var.'_get')) return true;
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p__Neoradio2DeviceInfo') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_Neoradio2DeviceInfo();
	}
}


?>
